/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CCP.Main;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;

import Utils.IMessage;
import Utils.Message;

/**
 *
 * Control Centre Process main class.
 */
public class Main extends javax.swing.JFrame {
    /**
     * Client TCP socket connection.
     */
    private Socket clientSocket;
    /**
     * Client TCP socket output.
     */
    private ObjectOutputStream out;
    /**
     * Client TCP socket input.
     */
    private ObjectInputStream in;
    /**
     * Server connection host.
     */
    private String HOST = "localhost";
    /**
     * Server connection port.
     */
    private int PORT = 5000;

    /**
     * Creates new form Main.
     */
    public Main() {
        initComponents();
        
        /* Send connection to Hostel Centre */
        initCCP();
    }
    
    /**
     * Initialize TCP connection with the hostel control centre server.
     */
    private void initCCP() {
        System.out.println("Trying to connect to the Hostel on host " + this.HOST + " and port " + this.PORT);
        try {
            this.clientSocket = new Socket(this.HOST, this.PORT);
            this.out = new ObjectOutputStream(this.clientSocket.getOutputStream());
            this.in = new ObjectInputStream(this.clientSocket.getInputStream());
        } catch(UnknownHostException e) {
            System.err.println("Unknown host " + this.HOST);
            System.exit(1);
        }
        catch (IOException e) {
            System.err.println("Couldn't get I/O for the connection to: " + this.HOST);
            System.exit(1);
        }
        
        System.out.println("Established connection with the Hostel Centre");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel = new javax.swing.JPanel();
        configurationPanel = new javax.swing.JPanel();
        centerConfiguration = new javax.swing.JPanel();
        configurationLabel = new javax.swing.JLabel();
        customersLabel = new javax.swing.JLabel();
        customersSlider = new javax.swing.JSlider();
        timeCheckInLabel = new javax.swing.JLabel();
        timeCheckInSlider = new javax.swing.JSlider();
        timeBathroomLabel = new javax.swing.JLabel();
        timeBathroomSlider = new javax.swing.JSlider();
        timeBreakfastLabel = new javax.swing.JLabel();
        timeBreakfastSlider = new javax.swing.JSlider();
        supervisionPanel = new javax.swing.JPanel();
        centerSupervisionPanel = new javax.swing.JPanel();
        supervisionLabel = new javax.swing.JLabel();
        supervisionLeftPanel = new javax.swing.JPanel();
        startButton = new javax.swing.JButton();
        checkInButton = new javax.swing.JButton();
        checkOutButton = new javax.swing.JButton();
        suspendButton = new javax.swing.JButton();
        resumeButton = new javax.swing.JButton();
        endButton = new javax.swing.JButton();
        supervisionRightPanel = new javax.swing.JPanel();
        operatingModeLabel = new javax.swing.JLabel();
        manualButton = new javax.swing.JButton();
        autoButton = new javax.swing.JButton();
        stepButton = new javax.swing.JButton();
        statusLabel = new javax.swing.JLabel();
        operatingLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Control Centre 0.1");
        setBounds(new java.awt.Rectangle(50, 200, 800, 600));
        setSize(new java.awt.Dimension(800, 600));

        basePanel.setLayout(new java.awt.BorderLayout());

        configurationPanel.setBackground(new java.awt.Color(55, 55, 55));
        configurationPanel.setPreferredSize(new java.awt.Dimension(350, 600));

        centerConfiguration.setBackground(new java.awt.Color(55, 55, 55));
        centerConfiguration.setPreferredSize(new java.awt.Dimension(200, 600));

        configurationLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        configurationLabel.setForeground(new java.awt.Color(255, 255, 255));
        configurationLabel.setText("Configuration");

        customersLabel.setForeground(new java.awt.Color(255, 255, 255));
        customersLabel.setText("Num Customers: 9");

        customersSlider.setMajorTickSpacing(1);
        customersSlider.setMaximum(27);
        customersSlider.setMinimum(3);
        customersSlider.setMinorTickSpacing(1);
        customersSlider.setPaintTicks(true);
        customersSlider.setSnapToTicks(true);
        customersSlider.setToolTipText("Num customers");
        customersSlider.setValue(9);
        customersSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        timeCheckInLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeCheckInLabel.setText("Time Check-in: 100 (ms)");

        timeCheckInSlider.setMajorTickSpacing(100);
        timeCheckInSlider.setMaximum(1000);
        timeCheckInSlider.setMinorTickSpacing(100);
        timeCheckInSlider.setPaintTicks(true);
        timeCheckInSlider.setSnapToTicks(true);
        timeCheckInSlider.setToolTipText("Time check-in");
        timeCheckInSlider.setValue(100);
        timeCheckInSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        timeBathroomLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeBathroomLabel.setText("Time Bathroom: 100 (ms)");

        timeBathroomSlider.setMajorTickSpacing(100);
        timeBathroomSlider.setMaximum(1000);
        timeBathroomSlider.setMinorTickSpacing(100);
        timeBathroomSlider.setPaintTicks(true);
        timeBathroomSlider.setSnapToTicks(true);
        timeBathroomSlider.setToolTipText("Time bathroom");
        timeBathroomSlider.setValue(100);
        timeBathroomSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        timeBreakfastLabel.setForeground(new java.awt.Color(255, 255, 255));
        timeBreakfastLabel.setText("Time Breakfast: 100 (ms)");

        timeBreakfastSlider.setMajorTickSpacing(100);
        timeBreakfastSlider.setMaximum(1000);
        timeBreakfastSlider.setMinorTickSpacing(100);
        timeBreakfastSlider.setPaintTicks(true);
        timeBreakfastSlider.setSnapToTicks(true);
        timeBreakfastSlider.setToolTipText("Time breakfast");
        timeBreakfastSlider.setValue(100);
        timeBreakfastSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        javax.swing.GroupLayout centerConfigurationLayout = new javax.swing.GroupLayout(centerConfiguration);
        centerConfiguration.setLayout(centerConfigurationLayout);
        centerConfigurationLayout.setHorizontalGroup(
            centerConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerConfigurationLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(configurationLabel)
                .addGap(33, 33, 33))
            .addGroup(centerConfigurationLayout.createSequentialGroup()
                .addGroup(centerConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, centerConfigurationLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(customersLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(customersSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeBreakfastSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeBathroomSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeCheckInSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(centerConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(centerConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(timeCheckInLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeBathroomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeBreakfastLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        centerConfigurationLayout.setVerticalGroup(
            centerConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(configurationLabel)
                .addGap(49, 49, 49)
                .addComponent(customersLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(customersSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(timeCheckInLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeCheckInSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(timeBathroomLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeBathroomSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(timeBreakfastLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(timeBreakfastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout configurationPanelLayout = new javax.swing.GroupLayout(configurationPanel);
        configurationPanel.setLayout(configurationPanelLayout);
        configurationPanelLayout.setHorizontalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurationPanelLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(centerConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        configurationPanelLayout.setVerticalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurationPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(centerConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        basePanel.add(configurationPanel, java.awt.BorderLayout.WEST);

        supervisionPanel.setBackground(new java.awt.Color(65, 65, 65));
        supervisionPanel.setPreferredSize(new java.awt.Dimension(450, 600));

        centerSupervisionPanel.setBackground(new java.awt.Color(65, 65, 65));
        centerSupervisionPanel.setPreferredSize(new java.awt.Dimension(380, 500));

        supervisionLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        supervisionLabel.setForeground(new java.awt.Color(255, 255, 255));
        supervisionLabel.setText("Supervision");

        supervisionLeftPanel.setBackground(new java.awt.Color(65, 65, 65));
        supervisionLeftPanel.setPreferredSize(new java.awt.Dimension(147, 456));
        supervisionLeftPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 65, 45));

        startButton.setBackground(new java.awt.Color(65, 65, 65));
        startButton.setForeground(new java.awt.Color(255, 255, 255));
        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(startButton);

        checkInButton.setBackground(new java.awt.Color(65, 65, 65));
        checkInButton.setForeground(new java.awt.Color(255, 255, 255));
        checkInButton.setText("Check-in");
        checkInButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(checkInButton);

        checkOutButton.setBackground(new java.awt.Color(65, 65, 65));
        checkOutButton.setForeground(new java.awt.Color(255, 255, 255));
        checkOutButton.setText("Check-out");
        checkOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(checkOutButton);

        suspendButton.setBackground(new java.awt.Color(65, 65, 65));
        suspendButton.setForeground(new java.awt.Color(255, 255, 255));
        suspendButton.setText("Suspend");
        suspendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(suspendButton);

        resumeButton.setBackground(new java.awt.Color(65, 65, 65));
        resumeButton.setForeground(new java.awt.Color(255, 255, 255));
        resumeButton.setText("Resume");
        resumeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(resumeButton);

        endButton.setBackground(new java.awt.Color(65, 65, 65));
        endButton.setForeground(new java.awt.Color(255, 255, 255));
        endButton.setText("End");
        endButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionLeftPanel.add(endButton);

        supervisionRightPanel.setBackground(new java.awt.Color(65, 65, 65));
        supervisionRightPanel.setPreferredSize(new java.awt.Dimension(147, 0));
        supervisionRightPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 65, 45));

        operatingModeLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        operatingModeLabel.setForeground(new java.awt.Color(255, 255, 255));
        operatingModeLabel.setText("Operating Mode");
        operatingModeLabel.setToolTipText("");
        supervisionRightPanel.add(operatingModeLabel);

        manualButton.setBackground(new java.awt.Color(65, 65, 65));
        manualButton.setForeground(new java.awt.Color(255, 255, 255));
        manualButton.setText("Manual");
        manualButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionRightPanel.add(manualButton);

        autoButton.setBackground(new java.awt.Color(65, 65, 65));
        autoButton.setForeground(new java.awt.Color(255, 255, 255));
        autoButton.setText("Auto");
        autoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionRightPanel.add(autoButton);

        stepButton.setBackground(new java.awt.Color(65, 65, 65));
        stepButton.setForeground(new java.awt.Color(255, 255, 255));
        stepButton.setText("Step");
        stepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });
        supervisionRightPanel.add(stepButton);

        statusLabel.setBackground(new java.awt.Color(65, 65, 65));
        statusLabel.setForeground(new java.awt.Color(255, 255, 255));
        statusLabel.setText("Status: Active");
        supervisionRightPanel.add(statusLabel);

        operatingLabel.setBackground(new java.awt.Color(65, 65, 65));
        operatingLabel.setForeground(new java.awt.Color(255, 255, 255));
        operatingLabel.setText("Operating: Auto");
        supervisionRightPanel.add(operatingLabel);

        javax.swing.GroupLayout centerSupervisionPanelLayout = new javax.swing.GroupLayout(centerSupervisionPanel);
        centerSupervisionPanel.setLayout(centerSupervisionPanelLayout);
        centerSupervisionPanelLayout.setHorizontalGroup(
            centerSupervisionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, centerSupervisionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(supervisionLabel)
                .addGap(133, 133, 133))
            .addGroup(centerSupervisionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(supervisionLeftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(supervisionRightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        centerSupervisionPanelLayout.setVerticalGroup(
            centerSupervisionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(centerSupervisionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(supervisionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(centerSupervisionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(supervisionRightPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(supervisionLeftPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout supervisionPanelLayout = new javax.swing.GroupLayout(supervisionPanel);
        supervisionPanel.setLayout(supervisionPanelLayout);
        supervisionPanelLayout.setHorizontalGroup(
            supervisionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supervisionPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(centerSupervisionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        supervisionPanelLayout.setVerticalGroup(
            supervisionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(supervisionPanelLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(centerSupervisionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        basePanel.add(supervisionPanel, java.awt.BorderLayout.CENTER);

        getContentPane().add(basePanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Sliders state changed event handler.
     * 
     * @param evt event object
     */
    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        customersLabel.setText(String.format("Num Customers: %d", customersSlider.getValue()));
        timeCheckInLabel.setText(String.format("Time Check-in: %d (ms)", timeCheckInSlider.getValue()));
        timeBathroomLabel.setText(String.format("Time Bathroom: %d (ms)", timeBathroomSlider.getValue()));
        timeBreakfastLabel.setText(String.format("Time Breakfast: %d (ms)", timeBreakfastSlider.getValue()));
    }//GEN-LAST:event_sliderStateChanged

    /**
     * Buttons action performed event handler.
     * 
     * @param evt event object
     */
    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        System.out.println(evt.getActionCommand());
        
        // update gui label text
        if (evt.getActionCommand().contains("Suspend"))
            this.statusLabel.setText("Status: Suspended");
        else if (evt.getActionCommand().contains("Resume"))
            this.statusLabel.setText("Status: Active");
        else if (evt.getActionCommand().contains("Manual"))
            this.operatingLabel.setText("Operating: Manual");
        else if (evt.getActionCommand().contains("Auto"))
            this.operatingLabel.setText("Operating: Auto");
        
        // send message to hostel centre
        try {                                       
            IMessage msgOut = Message.getInstance(evt.getActionCommand(), customersSlider.getValue(), timeCheckInSlider.getValue(), timeBathroomSlider.getValue(), timeBreakfastSlider.getValue());
            this.out.writeObject(msgOut);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (evt.getActionCommand().contains("End")) {
            System.out.println("Simulation ended");
            System.exit(0);
        }
    }//GEN-LAST:event_buttonActionPerformed

    /**
     * CCP main class entry point.
     * 
     * @param args the command line arguments
     * @throws java.lang.Exception exception
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
	/**
	* Java swing auto button
	*/
    private javax.swing.JButton autoButton;
	/**
	* Java panel base panel
	*/
    private javax.swing.JPanel basePanel;
	/**
	* Java center center configuration 
	*/
    private javax.swing.JPanel centerConfiguration;
	/**
	* Java panel supervision panel
	*/
    private javax.swing.JPanel centerSupervisionPanel;
	/**
	* Java swing check in button
	*/
    private javax.swing.JButton checkInButton;
	/**
	* Java swing check out button
	*/
    private javax.swing.JButton checkOutButton;
	/**
	* Java swing label configuration label
	*/
    private javax.swing.JLabel configurationLabel;
	/**
	* Java panel configuration panel
	*/
    private javax.swing.JPanel configurationPanel;
	/**
	* Java swing label customers label
	*/
    private javax.swing.JLabel customersLabel;
	/**
	* Java swing slider customers slider
	*/
    private javax.swing.JSlider customersSlider;
	/**
	* Java swing end button
	*/
    private javax.swing.JButton endButton;
	/**
	* Java swing manual button
	*/
    private javax.swing.JButton manualButton;
	/**
	* Java swing label operating label
	*/
    private javax.swing.JLabel operatingLabel;
	/**
	* Java swing label operating mode label
	*/
    private javax.swing.JLabel operatingModeLabel;
	/**
	* Java swing resume button
	*/
    private javax.swing.JButton resumeButton;
	/**
	* Java swing start button
	*/
    private javax.swing.JButton startButton;
	/**
	* Java swing label status label
	*/
    private javax.swing.JLabel statusLabel;
	/**
	* Java swing step button
	*/
    private javax.swing.JButton stepButton;
	/**
	* Java swing label supervision label
	*/
    private javax.swing.JLabel supervisionLabel;
	/**
	* Java panel supervision left panel
	*/
    private javax.swing.JPanel supervisionLeftPanel;
	/**
	* Java panel supervision panel
	*/
    private javax.swing.JPanel supervisionPanel;
	/**
	* Java panel supervision right panel
	*/
    private javax.swing.JPanel supervisionRightPanel;
	/**
	* Java swing suspend button
	*/
    private javax.swing.JButton suspendButton;
	/**
	* Java swing label time bathroom label
	*/
    private javax.swing.JLabel timeBathroomLabel;
	/**
	* Java swing slider time bathroom slider
	*/
    private javax.swing.JSlider timeBathroomSlider;
	/**
	* Java swing label time breakfast label
	*/
    private javax.swing.JLabel timeBreakfastLabel;
	/**
	* Java swing label time breakfast label
	*/
    private javax.swing.JSlider timeBreakfastSlider;
	/**
	* Java swing label time check in label
	*/
    private javax.swing.JLabel timeCheckInLabel;
	/**
	* Java swing slider time check in slider
	*/
    private javax.swing.JSlider timeCheckInSlider;
    // End of variables declaration//GEN-END:variables
}
